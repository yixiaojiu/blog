import { SidebarsConfig } from '@docusaurus/plugin-content-docs'

const generate = (type: string, items: string[]) =>
  items.map((item) => `bagu/${type}/${item}`)

const factory = (type: string) => {
  return (items: string[]) => generate(type, items)
}

const generateHTMLCategory = factory('html-css')
const generateJSCategory = factory('js')
const generateTSCategory = factory('ts')
const generateVueCategory = factory('vue')
const generateReactCategory = factory('react')
const generateNetworkCategory = factory('network')
const generateOSCategory = factory('os')
const generateBrowserCategory = factory('browser')
const generateEngineeringCategory = factory('engineering')
const generateNodeCategory = factory('nodejs')
const generateCodeCategory = factory('code')
const generateInterviewCategory = factory('interview')
const generateEverythingCategory = factory('everything')
const generateDatabaseCategory = factory('database')

export const baguSiderbar: SidebarsConfig[string] = [
  {
    type: 'category',
    label: 'HTML CSS',
    items: generateHTMLCategory([
      'html',
      'css',
      'bfc',
      '层叠上下文',
      '重排重绘',
    ]),
  },
  {
    type: 'category',
    label: 'JS',
    items: generateJSCategory([
      'javascript-basis',
      'javascript-advanced',
      'v8',
      'regexp',
      'es6-plus',
    ]),
  },
  {
    type: 'category',
    label: 'TS',
    items: generateTSCategory(['basis', 'type-challenges']),
  },
  {
    type: 'category',
    label: 'Vue',
    items: generateVueCategory(['basis', 'source-code']),
  },
  {
    type: 'category',
    label: 'React',
    items: generateReactCategory(['base', 'principle', 'react-native']),
  },
  {
    type: 'category',
    label: '计算机网络',
    items: generateNetworkCategory([
      'network-model',
      'http',
      'https',
      'tcp',
      'udp',
      'ip',
      'authentication',
      'email-protocol',
    ]),
  },
  {
    type: 'category',
    label: '浏览器',
    items: generateBrowserCategory([
      'browser-security',
      'cache',
      'event-loop',
      'source-load',
      'composition',
      'vitals',
    ]),
  },
  {
    type: 'category',
    label: '工程化',
    items: generateEngineeringCategory([
      'engineering',
      'eslint',
      'package-management-tool',
      'vite',
      'webpack',
      'esbuild',
      'micro-frontend',
    ]),
  },
  {
    type: 'category',
    label: 'Node.js',
    items: generateNodeCategory(['basic', 'nest', 'principles']),
  },
  {
    type: 'category',
    label: '操作系统',
    items: generateOSCategory(['hardware', 'structure', 'memory', 'process']),
  },
  {
    type: 'category',
    label: '数据库',
    items: generateDatabaseCategory(['basic']),
  },
  {
    type: 'category',
    label: '代码篇',
    items: generateCodeCategory([
      'jsAchieve',
      'debounce-thorttle',
      'promise',
      'algorithm',
    ]),
  },
  {
    type: 'category',
    label: '杂货箱',
    items: generateEverythingCategory([
      'vuera',
      'design-patterns',
      'system-design',
    ]),
  },
  {
    type: 'category',
    label: '面经',
    items: generateInterviewCategory([
      '1',
      '2',
      '3',
      '4',
      '5',
      '6',
      '7',
      '8',
      '9',
      '10',
      '11',
    ]),
  },
]

export const noteSiderbar: SidebarsConfig[string] = [
  {
    type: 'category',
    label: 'AI',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/ai',
      },
    ],
  },
  {
    type: 'category',
    label: 'android',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/android',
      },
    ],
  },
  {
    type: 'category',
    label: '前端',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/frontend',
      },
    ],
  },
  {
    type: 'category',
    label: '后端',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/backend',
      },
    ],
  },
  {
    type: 'category',
    label: 'CS',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/cs',
      },
    ],
  },
  {
    type: 'category',
    label: 'Linux',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/linux',
      },
    ],
  },
  {
    type: 'category',
    label: 'Mac',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/mac',
      },
    ],
  },
  {
    type: 'category',
    label: 'Rust',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/rust',
      },
    ],
  },
  {
    type: 'category',
    label: 'Windows',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/windows',
      },
    ],
  },
  {
    type: 'category',
    label: '杂货箱',
    items: [
      {
        type: 'autogenerated',
        dirName: 'note/everything',
      },
    ],
  },
]

export const mnoteSiderbar: SidebarsConfig[string] = [
  {
    type: 'category',
    label: '摘抄',
    items: [
      {
        type: 'autogenerated',
        dirName: 'mnote/excerpt',
      },
    ],
  },
  {
    type: 'category',
    label: '音乐',
    items: [
      {
        type: 'autogenerated',
        dirName: 'mnote/music',
      },
    ],
  },
  {
    type: 'category',
    label: '碎碎念',
    items: [
      {
        type: 'autogenerated',
        dirName: 'mnote/thoughts',
      },
    ],
  },
  {
    type: 'category',
    label: '赴日旅游攻略',
    items: [
      {
        type: 'autogenerated',
        dirName: 'mnote/travel-tips',
      },
    ],
  },
]

export const recordSiderbar: SidebarsConfig[string] = [
  {
    type: 'category',
    label: '年度报告',
    items: [
      {
        type: 'autogenerated',
        dirName: 'record/annual-report',
      },
    ],
  },
  {
    type: 'category',
    label: '橱窗',
    items: [
      {
        type: 'autogenerated',
        dirName: 'record/show-window',
      },
    ],
  },
]

export default {
  bagu: baguSiderbar,
  note: noteSiderbar,
  mnote: mnoteSiderbar,
  record: recordSiderbar,
} satisfies SidebarsConfig
